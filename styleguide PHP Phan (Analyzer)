Features

Adds improved error detection from Phan to Visual Studio Code.
Supports "Go to definition" and "Go to type definition" (requires "phan.enableGoToDefinition": true). (Has some bugs when pcntl is unavailable)
Analyze code while you're typing.
Optionally analyze code with syntax errors.
Issue Tracker

Note: This is just the VS Code extension that spawns Phan. Phan is implemented purely in PHP in its own repository, bugs in Phan analysis need to be fixed there and all issues should be reported there.

However, bugs in this VS code extension (crashes, etc) or related to the language server protocol should be reported in this extension's issue tracker

Installation

Dependencies:

PHP 7.0+ must be installed. You can either add it to your PATH or set the phan.executablePath setting.

pcntl is recommended, but not absolutely necessary. (Available on Unix/Linux) (Phan's Language Server Protocol support depends on pcntl module being installed, which is only available on those platforms)

When running the Phan server without pcntl, Phan manually backs up, analyzes the requested files, then restores the server's state instead of forking to analyze, which may less reliably restore state than running the analysis in an independent process.

(Optional) For optimal performance and accuracy of analysis, the php-ast PECL extension should be installed and enabled.

For guidance on how to set up a Phan project, please see phan/phan, and the article Getting Started.

Setup steps

This assumes you have already installed the dependencies.

Add these entries to your VSCode config (Open the menu at File > Preferences > Settings)

{
    // The path to a project folder which Phan will analyze
    // (or an array of 1 or more folders to independently analyze).
    // Each project folder must be the root of a Phan project,
    // and contain a .phan/config.php file with a Phan config for that project.
    // (including files to parse and analyze).
    // On windows, a project folder would be a path such as
    // "C:\\Users\\MyUser\\path\\to\\analyzed\\folder"
    "phan.analyzedProjectDirectory": "/path/to/folder/to/analyze",

    // Path to a php 7.0+ binary
    // (preferably with the php-ast PECL extension installed and enabled)
    // This should be as similar as possible as the php installation used to run Phan
    // (Same php minor version,
    //  same extensions or phan internal stubs for extensions (excluding xdebug), etc.)
    // On windows, this would be "C:\\path\\to\\php-7.0-installation\\php.exe"
    "phan.phpExecutablePath": "/path/to/php7.1",

    // Optionally, enable unused variable detection
    // (off by default. This can also be enabled in `.phan/config.php`
    // by `"unused_variable_detection" => true,`)
    "phan.unusedVariableDetection": true,

    // Files which this should analyze (e.g. "php", "html", "inc")
    "phan.analyzedFileExtensions": ["php"]
}
After adding these entries, close and re-open Visual Studio Code in order for Phan to pick up the new settings.

If you have issues, see the Troubleshooting section

Examples

Error Detection

Phan error detection demo

Phan's capabilities are summarized in Phan's README

Error Detection (Tolerating Syntax Errors)

Phan error tolerant detection demo

Optional, enabled by the setting phan.useFallbackParser

Go To Definition

Supports "Go to definition" for properties, classes, global/class constants, and methods/global functions
Supports "Go to type definition" for variables, properties, classes, and methods/global functions
This is enabled by default. To disable this, add "phan.enableGoToDefinition": false in your config.json settings.

Hover

Supports hover text for generating descriptions of references to classes, properties, methods, constants, functions, etc.
Supports hover text for the union types of variables.
This is enabled by default. To disable this, add "phan.enableHover": false in your config.json settings.

Completion

This will complete references to the following element types:

global constants, global functions, and class names.
class constants, and instance and static method names.
This is disabled by default. This does not work properly for variables/static properties yet. To enable this, add "phan.enableCompletion": true in your config.json settings.

Contributing

Release History

0.6.4 (2018-12-15)

Update Phan from 1.1.5 to 1.1.8
See Phan's NEWS for more details.
0.6.3 (2018-11-29)

Update Phan from 1.1.2 to 1.1.5
Fix a bug in the language server causing it to fail when pcntl was unavailable (e.g. on Windows)
See Phan's NEWS for more details.
0.6.2 (2018-11-05)

Update Phan from 1.1.1 to 1.1.2
See Phan's NEWS for more details.
The full changelog can be found at NEWS.md

Troubleshooting

General troubleshooting advice:

By setting phan.enableDebugLog to true (and restarting Phan), you can get extra debug output. Enabling debug output will slow down this extension.

After any changes to the phan settings, the language server must be restarted.

VSCode has a built in debugger at "Help" > "Toggle Developer Tools" ( "Console" tab) This will let you see this extension's Phan's debug output.

Installing from source

This can be installed locally with the following method:

npm install
npm run build
node node_modules/.bin/vsce package
The generated VSIX file can be used locally with the steps from https://stackoverflow.com/a/38866913

Credits

This VS Code extension and many parts of the language server protocol implementation are based on PHP IntelliSense

This uses Phan
